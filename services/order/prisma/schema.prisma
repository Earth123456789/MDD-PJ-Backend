generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model orders {
  order_id              Int                    @id @default(autoincrement())
  customer_id           Int
  pickup_location       String
  delivery_location     String
  requested_pickup_date DateTime
  delivery_deadline     DateTime
  total_price           Decimal                @db.Decimal(10, 2)
  status                String                 @db.VarChar(20)
  order_items           order_items[]
  order_status_history  order_status_history[]
  price_calculations    price_calculations[]
}

model order_items {
  item_id              Int     @id @default(autoincrement())
  order_id             Int
  cargo_type           String  @db.VarChar(50)
  weight_kg            Decimal @db.Decimal(8, 2)
  dimensions_cm        String  @db.VarChar(50)
  special_requirements String?
  item_price           Decimal @db.Decimal(10, 2)
  status               String  @db.VarChar(20)
  order                orders  @relation(fields: [order_id], references: [order_id], onDelete: Cascade)
}

model price_calculations {
  calculation_id  Int     @id @default(autoincrement())
  order_id        Int
  base_price      Decimal @db.Decimal(10, 2)
  distance_factor Decimal @db.Decimal(5, 2)
  weight_factor   Decimal @db.Decimal(5, 2)
  urgency_factor  Decimal @db.Decimal(5, 2)
  final_price     Decimal @db.Decimal(10, 2)
  order           orders  @relation(fields: [order_id], references: [order_id], onDelete: Cascade)
}

model order_status_history {
  history_id   Int       @id @default(autoincrement())
  order_id     Int
  status       String    @db.VarChar(20)
  changed_at   DateTime
  changed_by   Int
  notes        String?
  order        orders    @relation(fields: [order_id], references: [order_id], onDelete: Cascade)
}