// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum OrderStatus {
  PENDING
  MATCHING
  MATCHED
  IN_TRANSIT
  DELIVERED
  CANCELLED
}

enum VehicleStatus {
  AVAILABLE
  ASSIGNED
  IN_TRANSIT
  MAINTENANCE
  INACTIVE
}

enum VehicleType {
  CAR
  VAN
  TRUCK
  MOTORCYCLE
}

model Order {
  id               Int         @id @default(autoincrement())
  user_id          Int
  pickup_location  Json
  dropoff_location Json
  package_weight_kg Float
  package_volume_m3 Float
  package_length_m  Float
  package_width_m   Float
  package_height_m  Float
  status           OrderStatus @default(PENDING)
  vehicle_matched  Int?
  vehicle          Vehicle?    @relation(fields: [vehicle_matched], references: [id])
  created_at       DateTime    @default(now())
  updated_at       DateTime    @updatedAt
  
  // Relations
  matchingScores   MatchingScore[]
  matchingAttempts MatchingAttempt[]
}

model Vehicle {
  id             Int           @id @default(autoincrement())
  driver_id      Int
  vehicle_type   VehicleType
  max_weight_kg  Float
  max_volume_m3  Float
  length_m       Float
  width_m        Float
  height_m       Float
  status         VehicleStatus @default(AVAILABLE)
  created_at     DateTime      @default(now())
  updated_at     DateTime      @updatedAt
  
  // Relations
  orders         Order[]
  matchingScores MatchingScore[]
  matchingAttempts MatchingAttempt[]
}

model MatchingScore {
  id              Int      @id @default(autoincrement())
  order_id        Int
  vehicle_id      Int
  weight_score    Float
  volume_score    Float
  dimension_score Float
  total_score     Float
  created_at      DateTime @default(now())
  
  // Relations
  order           Order    @relation(fields: [order_id], references: [id])
  vehicle         Vehicle  @relation(fields: [vehicle_id], references: [id])
}

model MatchingAttempt {
  id             Int      @id @default(autoincrement())
  order_id       Int
  vehicle_id     Int
  algorithm_used String
  score          Float
  status         String
  created_at     DateTime @default(now())
  
  // Relations
  order          Order    @relation(fields: [order_id], references: [id])
  vehicle        Vehicle  @relation(fields: [vehicle_id], references: [id])
}