version: '3.7'

services:
  gateway:
    build:
      context: ../gateway  
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - web
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.local`)"  # Expose dashboard

  auth:
    build: ../services/auth
    container_name: auth
    networks:
      - web
    ports:
      - "3001:3001"  
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.local`)"  
      - "traefik.http.services.auth.loadbalancer.server.port=80" 

  customer:
    build: ../services/customer
    container_name: customer
    networks:
      - web
    ports:
      - "3002:3002"  
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.customer.rule=Host(`customer.local`) && Path(`/customer`)"  
      - "traefik.http.services.customer.loadbalancer.server.port=80" 

  delivery:
    build: ../services/delivery
    container_name: delivery
    networks:
      - web
    ports:
      - "3003:3003"  
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.delivery.rule=Host(`delivery.local`) && Path(`/delivery`)"  
      - "traefik.http.services.delivery.loadbalancer.server.port=80" 
  
  order:
    build: ../services/order
    container_name: order
    networks:
      - web
    ports:
      - "3004:3004"  
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order.rule=Host(`order.local`) && Path(`/order`)"  
      - "traefik.http.services.order.loadbalancer.server.port=80" 

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"  
      - "15672:15672"  
    networks:
      - web
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

networks:
  web:
    driver: bridge

volumes:
  rabbitmq-data:
