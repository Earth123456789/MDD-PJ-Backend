services:
  auth-service:
    build:
      context: ../services/auth
      dockerfile: Dockerfile
    container_name: auth-service
    restart: always
    ports:
      - "5001:5001"
    env_file:
      - ../services/auth/.env
    volumes:
      - ../services/auth:/app
      - /app/node_modules
    depends_on:
      - auth-postgres
      - rabbitmq
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma migrate deploy &&
        npm run start
      "
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.routers.auth.rule=Host(`auth.localhost`)"
      - "traefik.http.services.auth.loadbalancer.server.port=5001"
    networks:
      - traefik

  user-driver-service:
    build:
      context: ../services/user-driver-service
      dockerfile: Dockerfile
    container_name: user-driver-service
    restart: always
    ports:
      - "3001:3001"
    env_file:
      - ../services/user-driver-service/.env
    volumes:
      - ../services/user-driver-service:/app
      - /app/node_modules
    depends_on:
      - user-driver-postgres
      - rabbitmq
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma migrate deploy &&
        npm run start
      "
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.userdriver.entrypoints=web"
      - "traefik.http.routers.userdriver.rule=Host(`user-driver.localhost`)"
      - "traefik.http.services.userdriver.loadbalancer.server.port=3001"
    networks:
      - traefik

  auth-postgres:
    image: postgres:latest
    container_name: auth-postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
      POSTGRES_DB: auth_db
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - traefik

  user-driver-postgres:
    image: postgres:latest
    container_name: user-driver-postgres
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: user_driver_user
      POSTGRES_PASSWORD: user_driver_pass
      POSTGRES_DB: user_driver_db
    volumes:
      - user_driver_postgres_data:/var/lib/postgresql/data
    networks:
      - traefik

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - traefik
    labels:
      - "traefik.enable=false"

  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  traefik:
    external: true

volumes:
  auth_postgres_data:
  user_driver_postgres_data:
  rabbitmq_data:
