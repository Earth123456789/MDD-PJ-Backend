version: '3.8'

services:
  order:
    build:
      context: ../services/order
      dockerfile: Dockerfile
    container_name: order
    restart: always
    volumes:
      - ../services/order:/app
    ports:
      - "3004:3004"
    environment:
      - DB_ENGINE=${DB_ENGINE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST_DOCKER}
      - DB_PORT=${DB_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
      - DEBUG=False
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
    env_file:
      - ../services/order/.env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.services.order.loadbalancer.server.port=3004"
      - "traefik.http.routers.order.rule=Host(`order.localhost`)"
    depends_on:
      - postgres
      - rabbitmq
    command: >
      bash -c "aerich init-db && aerich upgrade && uvicorn main:app --host 0.0.0.0 --port 3004"
    networks:
      - traefik

  postgres:
    image: postgres:latest
    container_name: order_service_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../services/order/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - traefik

  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - traefik
    labels:
      - "traefik.enable=false"
    
  # เวลาเหลือเดี๋ยวมาทำ

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - ES_JAVA_OPTS=-Xms512m -Xmx512m
  #     - xpack.security.enabled=false
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   networks:
  #     - traefik
  #   labels:
  #     - "traefik.enable=false"

networks:
  traefik:
    external: true

volumes:
  postgres_data:
  rabbitmq_data:
  # elasticsearch_data:
